<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.zeemoo.rbac.mapper.LoginInfoMapper">
    <resultMap id="BaseResultMap" type="cn.zeemoo.rbac.domain.LoginInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="is_admin" property="isAdmin" jdbcType="BIT"/>
        <result column="is_banned" property="isBanned" jdbcType="BIT"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="CHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="token" property="token" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="error_times" property="errorTimes" jdbcType="INTEGER"/>
    </resultMap>

    <delete id="deleteByPrimaryKey">
        delete from `rbac_login_info`
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert">
        insert into `rbac_login_info` (id, create_time, is_admin,
          is_banned, last_login_time, modify_time,
          password, phone, real_name,
          token, username, error_times
          )
        values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{isAdmin,jdbcType=BIT},
          #{isBanned,jdbcType=BIT}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP},
          #{password,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, #{realName,jdbcType=VARCHAR},
          #{token,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{errorTimes,jdbcType=INTEGER}
          )
    </insert>

    <update id="updateByPrimaryKey">
        update `rbac_login_info`
        set create_time = #{createTime,jdbcType=TIMESTAMP},
          is_admin = #{isAdmin,jdbcType=BIT},
          is_banned = #{isBanned,jdbcType=BIT},
          last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
          modify_time = #{modifyTime,jdbcType=TIMESTAMP},
          password = #{password,jdbcType=VARCHAR},
          phone = #{phone,jdbcType=CHAR},
          real_name = #{realName,jdbcType=VARCHAR},
          token = #{token,jdbcType=VARCHAR},
          username = #{username,jdbcType=VARCHAR},
          error_times = #{errorTimes,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <sql id="BaseColumns">
        id, create_time, is_admin, is_banned, last_login_time, modify_time, password,
        phone, real_name, token, username, error_times
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="BaseColumns"/>
        from `rbac_login_info`
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="BaseColumns"/>
        from `rbac_login_info`
    </select>

    <select id="selectByUsername" resultMap="BaseResultMap">
        SELECT <include refid="BaseColumns"/> FROM `rbac_login_info` where username=#{username}
    </select>

    <select id="selectAllByUsernameLikeAndIsAdminIsFalse" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumns"/>
        from `rbac_login_info`
        <where>
            AND is_admin is FALSE
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%',#{username},'%')
            </if>
        </where>
        ORDER BY modify_time DESC ,create_time DESC
    </select>

    <select id="selectByIsAdminIsTrue" resultMap="BaseResultMap">
        SELECT <include refid="BaseColumns"/>
        FROM `rbac_login_info` WHERE is_admin IS FALSE
    </select>

</mapper>